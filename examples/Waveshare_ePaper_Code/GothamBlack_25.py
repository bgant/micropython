# Code generated by font_to_py.py.
# Font: GothamBlack-25.bdf Char set: 0123456789aeirtw
# Cmd: font_to_py.py GothamBlack-25.bdf 25 -x -c 1234567890wateri GothamBlack_25.py
version = '0.33'

def height():
    return 18

def baseline():
    return 18

def max_width():
    return 22

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 48

def max_ch():
    return 119

_font =\
b'\x0e\x00\x1f\x80\x7f\xe0\xff\xf0\x7f\xf8\x30\xf8\x20\xf8\x01\xf8'\
b'\x0f\xf0\x0f\xf0\x0f\xc0\x0f\x00\x07\x00\x00\x00\x00\x00\x0f\x80'\
b'\x0f\x80\x0f\x80\x0f\x80\x12\x00\x03\xf0\x00\x0f\xfc\x00\x1f\xfe'\
b'\x00\x1f\xfe\x00\x3f\x3f\x00\x3e\x1f\x00\x7c\x0f\x80\x7c\x0f\x80'\
b'\x7c\x0f\x80\x7c\x0f\x80\x7c\x0f\x80\x7c\x0f\x80\x3e\x1f\x00\x3f'\
b'\x3f\x00\x3f\xfe\x00\x1f\xfe\x00\x0f\xfc\x00\x03\xf0\x00\x0b\x00'\
b'\x0f\x80\xff\x80\xff\x80\x7f\x80\x7f\x80\x0f\x80\x0f\x80\x0f\x80'\
b'\x0f\x80\x0f\x80\x0f\x80\x0f\x80\x0f\x80\x0f\x80\x0f\x80\x0f\x80'\
b'\x0f\x80\x0f\x80\x10\x00\x07\xe0\x1f\xf8\x3f\xfc\x7f\xfe\x3c\x7e'\
b'\x08\x3e\x00\x3e\x00\x7e\x00\xfc\x01\xfc\x03\xf8\x07\xe0\x1f\xc0'\
b'\x3f\x80\x7f\xfe\x7f\xfe\x7f\xfe\x7f\xfe\x10\x00\x3f\xfc\x3f\xfc'\
b'\x3f\xfc\x3f\xfc\x00\xf8\x01\xf0\x03\xe0\x07\xf0\x0f\xf8\x07\xfc'\
b'\x00\xfe\x00\x3e\x10\x3e\x3c\x7e\x7f\xfc\x7f\xfc\x3f\xf8\x0f\xe0'\
b'\x11\x00\x00\xfc\x00\x00\xfc\x00\x01\xfc\x00\x03\xfc\x00\x07\xfc'\
b'\x00\x0f\xfc\x00\x0f\xfc\x00\x1f\x7c\x00\x3e\x7c\x00\x7c\x7c\x00'\
b'\xf8\x7c\x00\xff\xff\x00\xff\xff\x00\xff\xff\x00\xff\xff\x00\x00'\
b'\x7c\x00\x00\x7c\x00\x00\x7c\x00\x10\x00\x3f\xfc\x3f\xfc\x3f\xfc'\
b'\x3f\xfc\x3c\x00\x3c\x00\x3f\xe0\x3f\xf8\x3f\xfc\x3f\xfe\x08\x7e'\
b'\x00\x3e\x10\x3e\x38\x7e\x7f\xfc\xff\xfc\x3f\xf8\x0f\xe0\x11\x00'\
b'\x03\xf0\x00\x0f\xfc\x00\x1f\xfe\x00\x3f\xfc\x00\x3e\x18\x00\x3e'\
b'\x00\x00\x7c\xf8\x00\x7f\xfc\x00\x7f\xfe\x00\x7f\xff\x00\x7e\x3f'\
b'\x00\x7c\x1f\x00\x7c\x1f\x00\x3e\x3f\x00\x3f\xfe\x00\x1f\xfe\x00'\
b'\x0f\xfc\x00\x03\xf0\x00\x0f\x00\x7f\xfe\x7f\xfe\x7f\xfe\x7f\xfe'\
b'\x00\x7c\x00\xfc\x00\xf8\x01\xf8\x01\xf0\x03\xf0\x03\xe0\x07\xc0'\
b'\x07\xc0\x0f\x80\x1f\x80\x1f\x00\x3f\x00\x3e\x00\x10\x00\x07\xe0'\
b'\x1f\xf8\x3f\xfc\x7f\xfe\x7c\x3e\x7c\x3e\x7c\x3e\x3f\xfc\x0f\xf8'\
b'\x1f\xfc\x3f\xfc\x7c\x3e\x7c\x3e\x7c\x3e\x7f\xfe\x3f\xfc\x1f\xf8'\
b'\x07\xe0\x11\x00\x07\xe0\x00\x1f\xf8\x00\x3f\xfc\x00\x3f\xfe\x00'\
b'\x7e\x3e\x00\x7c\x1f\x00\x7c\x1f\x00\x7e\x3f\x00\x7f\xff\x00\x3f'\
b'\xff\x00\x1f\xff\x00\x0f\x9f\x00\x00\x3e\x00\x18\x7e\x00\x1f\xfc'\
b'\x00\x3f\xfc\x00\x3f\xf8\x00\x07\xe0\x00\x0f\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x1f\xc0\x3f\xf0\x3f\xf8\x3f\xfc\x20\xfc\x00\x7c'\
b'\x1f\xfc\x3f\xfc\x7c\x7c\x7c\x7c\x7f\xfc\x7f\xfc\x3f\xfc\x1f\x7c'\
b'\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\xc0\x1f\xf0\x3f\xf8'\
b'\x3f\xfc\x7c\x7c\x78\x3c\x7f\xfc\x7f\xfc\x78\x00\x7c\x30\x3f\xf8'\
b'\x3f\xfc\x1f\xf0\x07\xe0\x08\x00\x7c\x7c\x7c\x7c\x7c\x7c\x7c\x7c'\
b'\x7c\x7c\x7c\x7c\x7c\x7c\x7c\x7c\x7c\x7c\x0b\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x40\x7d\xc0\x7f\xc0\x7f\xc0\x7f\xc0\x7f\x00\x7e\x00'\
b'\x7c\x00\x7c\x00\x7c\x00\x7c\x00\x7c\x00\x7c\x00\x7c\x00\x7c\x00'\
b'\x0b\x00\x00\x00\x3e\x00\x3e\x00\x3e\x00\xff\xc0\xff\xc0\xff\xc0'\
b'\xff\xc0\x3e\x00\x3e\x00\x3e\x00\x3e\x00\x3e\x00\x3e\x00\x3f\xc0'\
b'\x3f\xc0\x1f\xc0\x0f\x80\x16\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\xf8\x78\x78\x78\xf8\xf8\x7c\xf8\xf0\x7c\xfc\xf0'\
b'\x3d\xfd\xf0\x3d\xfd\xf0\x3f\xff\xe0\x1f\xff\xe0\x1f\xdf\xe0\x1f'\
b'\xcf\xc0\x1f\xcf\xc0\x0f\x8f\xc0\x0f\x8f\xc0\x0f\x87\x80'

_index =\
b'\x00\x00\x26\x00\x5e\x00\x84\x00\xaa\x00\xd0\x00\x08\x01\x2e\x01'\
b'\x66\x01\x8c\x01\xb2\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\xea\x01\x00\x00\x00\x00\x00\x00\x10\x02\x00\x00'\
b'\x00\x00\x00\x00\x36\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x4a\x02\x00\x00\x70\x02\x00\x00\x00\x00'\
b'\x96\x02\xce\x02'

_mvfont = memoryview(_font)
_mvi = memoryview(_index)
ifb = lambda l : l[0] | (l[1] << 8)

def get_ch(ch):
    oc = ord(ch)
    ioff = 2 * (oc - 48 + 1) if oc >= 48 and oc <= 119 else 0
    doff = ifb(_mvi[ioff : ])
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((width - 1)//8 + 1) * 18
    return _mvfont[doff + 2:next_offs], 18, width
 
