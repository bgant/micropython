# Code generated by font_to_py.py.
# Font: GothamBlack-25.bdf Char set:  aefiklrstw
# Cmd: font_to_py.py GothamBlack-25.bdf 25 -x -c arwtfelsik  GothamBlack_25.py
version = '0.33'

def height():
    return 18

def baseline():
    return 18

def max_width():
    return 22

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 32

def max_ch():
    return 119

_font =\
b'\x0e\x00\x1f\x80\x7f\xe0\xff\xf0\x7f\xf8\x30\xf8\x20\xf8\x01\xf8'\
b'\x0f\xf0\x0f\xf0\x0f\xc0\x0f\x00\x07\x00\x00\x00\x00\x00\x0f\x80'\
b'\x0f\x80\x0f\x80\x0f\x80\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x1f\xc0\x3f\xf0\x3f\xf8\x3f\xfc\x20\xfc\x00\x7c'\
b'\x1f\xfc\x3f\xfc\x7c\x7c\x7c\x7c\x7f\xfc\x7f\xfc\x3f\xfc\x1f\x7c'\
b'\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\xc0\x1f\xf0\x3f\xf8'\
b'\x3f\xfc\x7c\x7c\x78\x3c\x7f\xfc\x7f\xfc\x78\x00\x7c\x30\x3f\xf8'\
b'\x3f\xfc\x1f\xf0\x07\xe0\x0a\x00\x0f\xc0\x1f\xc0\x3f\xc0\x3f\xc0'\
b'\xff\xc0\xff\xc0\xff\xc0\xff\xc0\x3e\x00\x3e\x00\x3e\x00\x3e\x00'\
b'\x3e\x00\x3e\x00\x3e\x00\x3e\x00\x3e\x00\x3e\x00\x08\x00\x7c\x7c'\
b'\x7c\x7c\x7c\x7c\x7c\x7c\x7c\x7c\x7c\x7c\x7c\x7c\x7c\x7c\x7c\x7c'\
b'\x0f\x00\x7c\x00\x7c\x00\x7c\x00\x7c\x00\x7c\x7c\x7c\x7e\x7c\xf8'\
b'\x7d\xf8\x7f\xf0\x7f\xe0\x7f\xe0\x7f\xe0\x7f\xf0\x7f\xf0\x7c\xf8'\
b'\x7c\xfc\x7c\x7c\x7c\x3e\x08\x00\x7c\x7c\x7c\x7c\x7c\x7c\x7c\x7c'\
b'\x7c\x7c\x7c\x7c\x7c\x7c\x7c\x7c\x7c\x7c\x0b\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x40\x7d\xc0\x7f\xc0\x7f\xc0\x7f\xc0\x7f\x00\x7e\x00'\
b'\x7c\x00\x7c\x00\x7c\x00\x7c\x00\x7c\x00\x7c\x00\x7c\x00\x7c\x00'\
b'\x0d\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x80\x3f\xe0\x7f\xf0'\
b'\x7f\xe0\x78\x60\x7c\x00\x3f\xc0\x1f\xe0\x41\xf0\x70\xf0\x7f\xf0'\
b'\xff\xf0\x7f\xe0\x0f\xc0\x0b\x00\x00\x00\x3e\x00\x3e\x00\x3e\x00'\
b'\xff\xc0\xff\xc0\xff\xc0\xff\xc0\x3e\x00\x3e\x00\x3e\x00\x3e\x00'\
b'\x3e\x00\x3e\x00\x3f\xc0\x3f\xc0\x1f\xc0\x0f\x80\x16\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf8\x78\x78\x78\xf8\xf8'\
b'\x7c\xf8\xf0\x7c\xfc\xf0\x3d\xfd\xf0\x3d\xfd\xf0\x3f\xff\xe0\x1f'\
b'\xff\xe0\x1f\xdf\xe0\x1f\xcf\xc0\x1f\xcf\xc0\x0f\x8f\xc0\x0f\x8f'\
b'\xc0\x0f\x87\x80'

_index =\
b'\x00\x00\x26\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x3a\x00\x00\x00\x00\x00\x00\x00\x60\x00\x86\x00'\
b'\x00\x00\x00\x00\xac\x00\x00\x00\xc0\x00\xe6\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\xfa\x00\x20\x01\x46\x01\x00\x00\x00\x00'\
b'\x6c\x01\xa4\x01'

_mvfont = memoryview(_font)
_mvi = memoryview(_index)
ifb = lambda l : l[0] | (l[1] << 8)

def get_ch(ch):
    oc = ord(ch)
    ioff = 2 * (oc - 32 + 1) if oc >= 32 and oc <= 119 else 0
    doff = ifb(_mvi[ioff : ])
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((width - 1)//8 + 1) * 18
    return _mvfont[doff + 2:next_offs], 18, width
 
